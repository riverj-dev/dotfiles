#    _                                          __
#   | |_ _ __ ___  _   ___  __  ___ ___  _ __  / _|
#   | __| '_ ` _ \| | | \ \/ / / __/ _ \| '_ \| |_
#   | |_| | | | | | |_| |>  < | (_| (_) | | | |  _|
#  (_)__|_| |_| |_|\__,_/_/\_(_)___\___/|_| |_|_|

# -----------------------------------------------------------------------------
# General
# -----------------------------------------------------------------------------
if-shell '[ $(uname -a | grep WSL)" != "" ]' "set-option -g default-shell /usr/bin/zsh"
if-shell '[ $(uname -a | grep WSL)" != "" ]' "set-option -g default-command /usr/bin/zsh"

if-shell '[ $(uname -a | grep WSL)" = "" ]' "set-option -g default-shell /usr/local/bin/zsh"
if-shell '[ $(uname -a | grep WSL)" = "" ]' "set-option -g default-command /usr/local/bin/zsh"

set-option -s escape-time 0
set-option -g prefix C-c
bind-key C-c send-prefix
unbind-key C-b

# キーストロークのディレイを減らす
set -sg escape-time 0

# 環境変数TMUX_VERSIONにバージョンを代入
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | sed -e 's/[a-zA-Z| \-]//g')"

# -----------------------------------------------------------------------------
# System window by supported OS
# -----------------------------------------------------------------------------
set-option -g set-titles on
set-option -g set-titles-string "[tmux] #T @ #H"

# -----------------------------------------------------------------------------
# Display time
# -----------------------------------------------------------------------------
set-option -g display-time 3500

# -----------------------------------------------------------------------------
# Window
# -----------------------------------------------------------------------------
# Start window index 1 origin
set-option -g base-index 1

# -----------------------------------------------------------------------------
# Pane
# -----------------------------------------------------------------------------
# Start pane index 1 origin
set-window-option -g pane-base-index 1

# ステータスバーのタイトルを設定する
set -g pane-border-status bottom
set -g pane-border-format " #{pane_index} : #T "

# ステータスバーの色を設定する
if-shell '[ "$(echo "$TMUX_VERSION < 2.8" | bc)" = 1 ]' "set-option -g status-bg colour214"
if-shell '[ "$(echo "$TMUX_VERSION < 2.8" | bc)" = 1 ]' "set-option -g status-fg colour241"
if-shell '[ "$(echo "$TMUX_VERSION > 2.9" | bc)" = 1 ]' "set-option -g status-style fg=#ffefb7,bg=#586e75"

# アクティブなステータスバーの色を設定する
if-shell '[ "$(echo "$TMUX_VERSION < 2.8" | bc)" = 1 ]' "set-window-option -g window-status-current-fg white"
if-shell '[ "$(echo "$TMUX_VERSION < 2.8" | bc)" = 1 ]' "set-window-option -g window-status-current-bg red"
if-shell '[ "$(echo "$TMUX_VERSION > 2.9" | bc)" = 1 ]' "set-window-option -g window-status-current-style fg=#315b6f,bg=#ffefb7"

# メッセージバーの色を設定する
if-shell '[ "$(echo "$TMUX_VERSION < 2.8" | bc)" = 1 ]' "set-option -g message-bg colour214"
if-shell '[ "$(echo "$TMUX_VERSION < 2.8" | bc)" = 1 ]' "set-option -g message-fg colour241"
if-shell '[ "$(echo "$TMUX_VERSION > 2.9" | bc)" = 1 ]' "set-option -g message-style fg=#ffefb7,bg=#315b6f"

# アクティブなペインのボーダー色を設定する
if-shell '[ "$(echo "$TMUX_VERSION < 2.8" | bc)" = 1 ]' "set -g pane-active-border-fg colour214"
if-shell '[ "$(echo "$TMUX_VERSION > 2.9" | bc)" = 1 ]' "set-option -g pane-active-border-style fg=#ffefb7"

# アクティブなペインの前景色、背景色を設定する
if-shell '[ "$(echo "$TMUX_VERSION < 2.8" | bc)" = 1 ]' "set -g window-active-style 'fg=#ffffff,bg=colour233'"
if-shell '[ "$(echo "$TMUX_VERSION > 2.9" | bc)" = 1 ]' "set-option -g window-active-style 'fg=#ffffff,bg=#132638'"

# 非アクティブなペインのボーダー色を設定する
if-shell '[ "$(echo "$TMUX_VERSION < 2.8" | bc)" = 1 ]' "set -g pane-border-fg white"
if-shell '[ "$(echo "$TMUX_VERSION > 2.9" | bc)" = 1 ]' "set-option -g pane-border-style fg=#315b6f"

# 非アクティブなペインの前景色、背景色を設定する
if-shell '[ "$(echo "$TMUX_VERSION < 2.8" | bc)" = 1 ]' "set -g window-style 'fg=colour247,bg=colour235'"
#if-shell '[ "$(echo "$TMUX_VERSION > 2.9" | bc)" = 1 ]' "set-option -g window-style 'fg=#72828a,bg=default'"
if-shell '[ "$(echo "$TMUX_VERSION > 2.9" | bc)" = 1 ]' "set-option -g window-style 'fg=#72828a,bg=colour237'"

# | でペインを縦に分割する
bind -T prefix | split-window -h
# - でペインを横に分割する
bind -T prefix - split-window -v
# o でペインを全画面表示
bind -T prefix o resize-pane -Z

# -----------------------------------------------------------------------------
# Key-bindings
# -----------------------------------------------------------------------------
# Reload config file
bind-key r source-file ~/.tmux.conf\; display-message "[tmux] ~/.tmux.conf reloaded!"

# -----------------------------------------------------------------------------
# Appearance
# -----------------------------------------------------------------------------
set-option -g status-position top
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides "xterm-256color:Tc"

# -----------------------------------------------------------------------------
# Customize statusline
# -----------------------------------------------------------------------------
# Length 
#set-option -g status-left-length 90
set-option -g status-right-length 120

# Contents left
#set-option -g status-left '#H:[#P]'
set-option -g status-left 'tmux:[#P]'

# Contents right
set -g status-right '| #(tmux show-options -g prefix) | Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | Online: #{online_status} | CPU: #{cpu_percentage} | %h/%d(%a) %H:%M'

# Reload statusbar
set-option -g status-interval 1

# Centerize
set-option -g status-justify centre

# Enable visual notification
set-window-option -g monitor-activity on

# Enable visual notification
set-option -g visual-activity on

# Enable statusbar top
set-option -g status-position top

# マウススクロールでスクリーンをスクロールする
set -g mouse on
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Toggle Mouse
bind-key m set-option -g mouse on \; display-message "Mouse : ON"
bind-key M set-option -g mouse off \; display-message "Mouse : OFF"

# Vi キーバインド
set-window-option -g mode-keys vi

# Prefix+v でコピーモード開始
bind-key v copy-mode \; display "Copy mode!"

# Prefix + Enter/y でコピー
# WSLの場合
if-shell '[ "$(uname -a | grep WSL)" != "" ]' "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xsel -bi'"
if-shell '[ "$(uname -a | grep WSL)" != "" ]' "bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel 'xsel -bi'"
if-shell '[ "$(uname -a | grep WSL)" != "" ]' "bind-key -T copy-mode-vi D     send-keys -X copy-end-of-line 'xsel -bi'"
if-shell '[ "$(uname -a | grep WSL)" != "" ]' "bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xsel -bi'"

#if-shell '[ "$(uname -a | grep WSL)" != "" ]' "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'win32yank.exe -i'"
#if-shell '[ "$(uname -a | grep WSL)" != "" ]' "bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel 'win32yank.exe -i'"
#if-shell '[ "$(uname -a | grep WSL)" != "" ]' "bind-key -T copy-mode-vi D     send-keys -X copy-end-of-line 'win32yank.exe -i'"
#if-shell '[ "$(uname -a | grep WSL)" != "" ]' "bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'win32yank.exe -i'"

# WSL以外の場合
if-shell '[ "$(uname -a | grep WSL)" = "" ]' "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'pbcopy'"
if-shell '[ "$(uname -a | grep WSL)" = "" ]' "bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel 'pbcopy'"
if-shell '[ "$(uname -a | grep WSL)" = "" ]' "bind-key -T copy-mode-vi D     send-keys -X copy-end-of-line 'pbcopy'"
if-shell '[ "$(uname -a | grep WSL)" = "" ]' "bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'pbcopy'"

# Prefix + p でペースト
# WSLの場合
if-shell '[ "$(uname -a | grep WSL)" != "" ]' "bind-key p run 'win32yank.exe -o | tmux load-buffer - && tmux paste-buffer'"
# WSL以外の場合
if-shell '[ "$(uname -a | grep WSL)" = "" ]' "bind-key p paste-buffer"

# v キーで選択開始
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Esc キーで選択を解除（コピーモードは抜けない）
bind-key -T copy-mode-vi Escape send-keys -X clear-selection
# Ctrl-c キーで選択を解除（コピーモードから抜ける)
bind-key -T copy-mode-vi C-c send-keys -X cancel

# Ctrl-v キーで矩形選択開始
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
# Shift-v キーで1行選択開始
bind-key -T copy-mode-vi V send-keys -X select-line

# Ctrl-i キーで行頭に移動
bind-key -T copy-mode-vi C-i send-keys -X start-of-line
# Ctrl-a キーで行末に移動
bind-key -T copy-mode-vi C-a send-keys -X end-of-line

# w キーで次の単語の最初の1文字に移動
bind-key -T copy-mode-vi w send-keys -X next-word
# e キーで現在の単語の最後の1文字に移動
bind-key -T copy-mode-vi e send-keys -X next-word-end
# b キーで前の単語最初の1文字に移動
bind-key -T copy-mode-vi b send-keys -X previous-word

# g キーで画面上に映る最上行に移動
bind-key -T copy-mode-vi g send-keys -X top-line
# Shift-g キーで画面上に映る最下行に移動
bind-key -T copy-mode-vi G send-keys -X bottom-line

# / キーで前方検索
bind-key -T copy-mode-vi / send-keys -X search-forward
# ? キーで後方検索
bind-key -T copy-mode-vi ? send-keys -X search-backward

# ページスクロール
bind-key -T copy-mode-vi C-n send-keys -X page-up
bind-key -T copy-mode-vi C-f send-keys -X page-down
# ページ送り
bind-key -T copy-mode-vi C-u send-keys -X scroll-up
bind-key -T copy-mode-vi C-d send-keys -X scroll-down

# vim <=> tmux 間でクリップボード利用を可能にする（WSL以外の場合）※不要
#if-shell '[ "$(uname -a | grep WSL)" = "" ]' "set-option -g default-command 'reattach-to-user-namespace -l $SHELL'"

# List of plugins
set -g @tpm_plugins '                \
     tmux-plugins/tpm                \
     tmux-plugins/tmux-sensible      \
     tmux-plugins/tmux-yank          \
     tmux-plugins/tmux-resurrect     \
     tmux-plugins/tmux-continuum     \
     tmux-plugins/tmux-battery       \
     tmux-plugins/tmux-cpu           \
     tmux-plugins/tmux-online-status \
     tmux-plugins/tmux-pain-control  \
'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# -----------------------------------------------------------------------------
# tmux-continuum 設定
# -----------------------------------------------------------------------------
# 保存インターバル
set -g @continuum-save-interval '1'

# tmuxスタート時に自動で復元
set -g @continuum-boot 'on'
set -g @continuum-restore 'on'

